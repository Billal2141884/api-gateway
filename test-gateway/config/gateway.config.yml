http:
  port: 8080
admin:
  port: 9876
  host: localhost
log:
  level: debug
apiEndpoints:
  api:
    host: localhost
    paths: "/ip"
  seismicData:
    host: "localhost"
    paths: "/seismic/*"
  daylightData:
    host: "localhost"
    paths: "/daylight/*"
  isslocationData:
    host: "localhost"
    paths: "/iss-now"
  weatherData:
    host: "localhost"
    paths: "/api/weather/*"
  temperatureData:
    host: "localhost"
    paths: "/api/temperature/*"
serviceEndpoints:
  httpbin:
    url: "https://httpbin.org"
  seismic:
    url: "https://65ca483b3b05d29307e01640.mockapi.io/api"
  daylight:
    url: "https://65ca483b3b05d29307e01640.mockapi.io/api"
  isslocation:
    url: "http://api.open-notify.org"
  weather:
    url: "https://jubilant-funicular-r47rr76jwr7vcw5wx-3000.app.github.dev/"
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
pipelines:
  default:
    apiEndpoints:
      - api
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: httpbin
              changeOrigin: true
  seismic:
    apiEndpoints:
      - seismicData
    policies:
      - log:
          action:
            message: "${req.method} ${req.originalUrl}"
      - proxy:
          - action:
              serviceEndpoint: seismic
              changeOrigin: true
  daylight:
    apiEndpoints:
      - daylightData
    policies:
      - log:
          action:
            message: "${req.method} ${req.originalUrl}"
      - proxy:
          - action:
              serviceEndpoint: daylight
              changeOrigin: true
  isslocation:
    apiEndpoints:
      - isslocationData
    policies:
      - log:
          action:
            message: "${req.method} ${req.originalUrl}"
      - proxy:
          - action:
              serviceEndpoint: isslocation
              changeOrigin: true
  weather:
    apiEndpoints:
      - weatherData
    policies:
      - log:
          action:
            message: "${req.method} ${req.originalUrl}"
      - proxy:
          - action:
              serviceEndpoint: weather
              changeOrigin: true
  temperature:
    apiEndpoints:
      - temperatureData
    policies:
      - log:
          action:
            message: "${req.method} ${req.originalUrl}"
      - proxy:
          - action:
              serviceEndpoint: weather
              changeOrigin: true
            
            